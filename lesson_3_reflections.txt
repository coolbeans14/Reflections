When would you want to use a remote repository rather than keeping all your work
local?

    If you're collaborating with another person, or want to make your work accessible
    to other people through the internet; or if you just want a backup of your work
    on the cloud.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    So that you don't find your code changing when you aren't around or in
    unexpected ways.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clones are just copies of a repository in another place. Forks are the same
    as clones, but the origin and created repository are both on Github. Branches
    are a split in the development of the repository itself, which can have
    different code/functionality.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows you to see how far you've come compared to the main version,
    and it gives you more information to manage versions in general.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Through another program, but if not that, then probably email. Communication
    might be a little bit better but combining code and working in parallel
    would be much harder.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Working in a separate branch gives another layer of protection to the master
    branch, which multiple people might be working on and from which unexpected
    changes might disrupt the productivity flow. But working in master does
    save time in managing the repository, so it could be ok for very small
    projects.
